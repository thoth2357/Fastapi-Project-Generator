{%- set license_classifiers = {
    'MIT': 'License :: OSI Approved :: MIT License',
    'BSD-3-Clause': 'License :: OSI Approved :: BSD License',
    'ISC': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache-2.0': 'License :: OSI Approved :: Apache Software License',
    'GPL-3.0-only': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}

[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}."
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.github_email }}>"]
readme = "README.md"

{%- if cookiecutter.open_source_license in license_classifiers %}
license =  "{{ cookiecutter.open_source_license }}"
{%- endif %}

packages = [
    { include = "src" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">3.8.1, <3.12"
cookiecutter = "^2.4.0"
fastapi = ">0.101.0,<0.103.2"
pydantic = ">2.3.0,<2.4.2"
httpx = "^0.25.0"

{% if cookiecutter.asgi_server == 'Uvicorn' %}
uvicorn = "^0.23.2"
{% elif cookiecutter.asgi_server == 'Hypercorn' %}
hypercorn = "^0.14.4"
{% endif %}


pyyaml = {version="^5.3.1",optional=true}
{%- if cookiecutter.command_line_interface|lower == 'click' %}
click = "8.0.1"
{%- endif %}

black = "^23.9.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
flake8-docstrings = "^1.7.0"
{%- if cookiecutter.use_mypy == 'y' %}
mypy = "^1.5.1"
{%- endif %}
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
tox = "^4.11.3"
virtualenv = "^20.24.5"
pip = "^23.2.1"
mkdocs = "^1.5.3"
mkdocs-include-markdown-plugin = "^6.0.1"
mkdocs-material = "^9.4.4"
mkdocstrings = "^0.23.0"
mkdocs-material-extensions = "^1.2"
twine = "^4.0.2"
mkdocs-autorefs = "^0.5.0"
pre-commit = "^3.4.0"
toml = "^0.10.2"
bump2version = "^1.0.1"
tomli = "^2.0.1"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    {%- if cookiecutter.use_mypy == 'y' %}
    "mypy",
    {%- endif %}
    "flake8",
    "flake8-docstrings",
    "pytest-cov"

]
dev = [
        "tox", 
        "pre-commit", 
        "virtualenv", 
        "pip", 
        "twine", 
        "toml", 
        "bump2version"
]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
]

{% if cookiecutter.command_line_interface|lower == 'click' -%}
[tool.poetry.scripts]
{{ cookiecutter.project_slug }} = 'src.cli:main'
{% endif -%}


[tool.black]
line-length = 120
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
